// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  MODERATOR
}

model User {
  id String @id @default(cuid())
  username String @unique
  email String @unique
  password String
  role Role @default(USER)
  tokens RefreshToken[]
  posts Post[]
  comments Comment[]
  votes Vote[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RefreshToken {
  id String @id @default(cuid())
  userId String
  token String @unique
  expiresAt DateTime
  role Role @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  user User @relation(fields: [userId], references: [id])
}

model Post {
  id Int @id @default(autoincrement())
  title String
  content String
  authorId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  comments Comment[]
  rating Int @default(0)
  votes Vote[]

  author User @relation(fields: [authorId], references: [id])
}

model Comment {
  id Int @id @default(autoincrement())
  content String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  postId Int
  post Post @relation(fields: [postId], references: [id])
  authorId String
  author User @relation(fields: [authorId], references: [id])
  parentId Int?
  parent Comment? @relation("CommentReplies", fields: [parentId], references: [id])
  replies Comment[] @relation("CommentReplies")
  votes Vote[]
  rating Int @default(0)
}

model Vote {
  id Int @id @default(autoincrement())
  value Int
  user User @relation(fields: [userId], references: [id])
  userId String
  post Post? @relation(fields: [postId], references: [id])
  postId Int?
  comment Comment? @relation(fields: [commentId], references: [id])
  commentId Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@unique([userId, postId], name: "unique_vote_per_user_per_post")
  @@unique([userId, commentId], name: "unique_vote_per_user_per_comment")
}